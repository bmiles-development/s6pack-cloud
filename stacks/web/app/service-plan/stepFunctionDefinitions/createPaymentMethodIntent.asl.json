{
    "StartAt" : "GetTenant",
    "States" : {
      "GetTenant": {
        "Type": "Task",
        "Resource": "arn:aws:states:::dynamodb:getItem",
        "Parameters": {
          "TableName": "${dataStackName}-Tenants",
          "Key": {
            "Id": {
              "S.$": "$.identity.claims.name"
            }
          }
        },
        "Next": "GetTenantPlanFromPlanId",
        "ResultPath": "$.tenant"
      },
      "GetTenantPlanFromPlanId": {
        "Type": "Task",
        "Resource": "arn:aws:states:::dynamodb:getItem",
        "Parameters": {
          "TableName": "${dataStackName}-PricePlans",
          "Key": {
            "Id": {
              "S.$": "$.tenant.Item.PlanId.S"
            }
          }
        },
        "Next": "CheckIfProcessorCustomerIdExists",
        "ResultPath": "$.tenant.Plan"
      },
      "CheckIfProcessorCustomerIdExists": {
        "Type": "Choice",
        "Choices": [
            {
              "Not": {
                "Variable": "$.tenant.Item.ProcessorCustomerId.S",
                "IsPresent": true
              },
              "Next":  "CreateProcessorCustomer"
            }
        ],
        "Default": "CreateSetupIntent"
      },
      "CreateProcessorCustomer": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${stripeApiEntity}",
          "Payload": {
            "callback": "createCustomer",
            "email.$": "$.identity.claims.email",
            "tenantId.$": "$.identity.claims.name"
          }
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next": "DynamoDBUpdateItem",
        "ResultPath": "$.processorCustomerData"
      },
      "DynamoDBUpdateItem": {
        "Type": "Task",
        "Resource": "arn:aws:states:::dynamodb:updateItem",
        "Parameters": {
          "TableName": "${dataStackName}-Tenants",
          "Key": {
            "Id": {
              "S.$": "$.identity.claims.name"
            }
          },
          "UpdateExpression": "SET ProcessorCustomerId = :myValueRef",
          "ExpressionAttributeValues": {
            ":myValueRef": {"S.$": "$.processorCustomerData.Payload.id"}
          }
        },
        "ResultPath": "$.tenantNewPlanDetails",
        "Next": "ConvergeProcessorCustomerIdPath"
      },
      "ConvergeProcessorCustomerIdPath": {
        "Type": "Pass",
        "Next": "CreateSetupIntent",
        "ResultPath": "$.tenant.Item.ProcessorCustomerId",
        "Parameters": {
          "S.$": "$.processorCustomerData.Payload.id"
        }
      },
      "CreateSetupIntent": {
        "Comment": "Create a setupIntent in stripe top pay for trial later",
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "ResultPath": "$.createdSetupIntent",
        "Parameters": {
          "FunctionName": "${stripeApiEntity}",
          "Payload": {
            "callback": "createPaymentMethodIntent",
            "customerId.$": "$.tenant.Item.ProcessorCustomerId.S",
            "metadata": {
              "userId.$": "$.identity.claims.sub"
            }
          }
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next" : "PassSetupIntent"
      },
      "PassSetupIntent" : {
        "Type": "Pass",
        "End": true,
        "Parameters": {
          "clientSecret.$": "$.createdSetupIntent.Payload.client_secret"
        }
      }
    }
  }